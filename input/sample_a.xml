<?xml version='1.0' encoding='UTF-8'?>

<epub>

	<!-- opf element represents your epub's content.opf file -->
	<opf>
	
        	<!-- package is the root element of content.opf -->
        	
        	<package xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" xmlns:opf="http://www.idpf.org/2007/opf" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.idpf.org/2007/opf" version="2.0" unique-identifier="id">
        	   <metadata>
        	      <dc:publisher>www.kurttrue.net</dc:publisher>
                      <dc:language xsi:type="dcterms:RFC4646">en</dc:language>
                      <dc:date opf:event="publication">2017-05-08</dc:date>
    	      
        	   </metadata>
        	</package>
 	
	</opf>
	
	<!-- 
	     ncx is the root element of your epub's toc.ncx file.  -->
	     docTitle element can appear in the ncx element, or isgihgen can parse it from your content file. 
	-->

        <ncx xmlns="http://www.daisy.org/z3986/2005/ncx/" version="2005-1" xml:lang="en">
        
   		<head>
   		  <meta  name="dtb:uid" content=""/>
   		  <meta  name="dtb:depth" content="2"/>
   		  <meta  name="dtb:totalPageCount" content="0"/>
   		  <meta  name="dtb:maxPageNumber" content="0"/>
   		</head>        
   		
        </ncx>
        
        <!-- 
        
             container is the root element of your epubs ./META-INF/container.xml file 
             isgihgen will add the a reference to content.opf to this element.
             
        -->
        
        <container xmlns="urn:oasis:names:tc:opendocument:xmlns:container" version="1.0"/>     
        
        <!--  
              isgihgen wants to know how your content is organized.  
              That information goes in the hierarchy element.
              
        -->

	<hierarchy>

	   
	      <book>
	         <chapter>
		     <entry/>
	         </chapter>
	      </book>
	   

	</hierarchy>

	
	<!-- 
	
	   References to your content paths can be relative or absolute 
	   and can include a the asterisk as a wildcard.
	   See ./input/sample_c.xml for an path value that includes a wildcard.
	   
	   
        -->
	
	<content>
	    <paths>
	       <!-- 
	           The attribute type="cover" here can indicate that the file represents the cover,
	           or isgihgen can determine the cover from a meta tag in the cover's head element.
	           See cover.html's head element for a sample of this meta tag (name="type" content="cover").
	           If you use ./input/sample_b.xml as your input file, isgihgen will 
	       -->
	       <path type="cover" id="test-cover">cover.xhtml</path>
	       <path>owl.xhtml</path>
	    </paths>
	</content>
	
	<!-- 
	     
	     The output element tells isgihgen where to put your output.
     	     
	-->
	
	<output>
	   <paths>
	        <!-- 
	           isgihgen will create two directories under root, docs and epub.  
	           Directory docs contains the prezipped epub content.
	           Directory epub contains the zipped epub.	           
	        -->
	        <root>../output/owlandpussycat</root>
	        <oebps>OEBPS</oebps>
	        <meta-inf>META-INF</meta-inf>
	        <!-- Content files will output to the subdirectory designated in the text element. -->
	        <text>text</text>
	   </paths>
	   
	   <!-- the name of your epub. -->
	   <name>owlandpussycat.epub</name>
	   
	   <!-- yes here means that isgihgen will delete your previous output. -->
	   <delete>yes</delete>	   
	
	</output>

</epub>